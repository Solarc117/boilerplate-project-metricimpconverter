LEGEND:
  ✅: task complete
  ❌: unable to complete task
  ⚠️: warning
  📄: note

📄 implement tdd for these projects; FIRST write the E2E failing test, THEN write code to pass test, FINALLY refactor test/code to implement a better solution (if any).  
 
✅ set environment variables on app.yaml
❌ for issue-tracker, write a test that: (bind EINVAL 0.0.0.0, 
tried comparing to sudoku-solver which also uses browser tests
but came up empty-handed)
  ❌ queries the #getProjects form,
  ❌ submits it,
  ❌ and ensures #jsonResult is updated with the correct data 
    📄 avoid being TOO thorough when validating data above
✅ stage & commit changes with semantic notes

  ✅ ensure api endpoints are tied to the proper handler methods
  ✅ ensure data is being sent & received propery in client forms and handler methods; for each form, send data and add logs to debug in their respective handler methods until they work:
    ✅ getProjects
    ✅ createProject:
      ✅ on form submit, POST to /api/issues/:project, with owner in data or params
      ✅ in handler, check that project and owner are strings of AT LEAST 1 length - if not, respond with status 400
      ✅ in handler OR dao, assign an ObjectId, and set issues to an array if it is not an array. remember to sanitize data before adding to database
      ✅ in dao, try to post the passed document
      ✅ debug to verify correct functionality
    ✅ getIssues
    ✅ submitIssue: 
      ✅ no longer submit/accept project owner in form/handler
      ✅ debug to test functionality
    ✅ issueIndex:
    ✅ update:
      ✅ fix open field not updating bug:
    ✅ delete:
✅ fix bug where project_owner is assigned to the ISSUE, instead of the project
✅ stage & commit changes with semantic notes

- fix bug where updateIssueForm shows even when no issue was fetched:
  - add issue existence checking in issue client js
- stage & commit changes with semantic notes

- fix duplicate project bug
- stage & commit changes with semantic notes

